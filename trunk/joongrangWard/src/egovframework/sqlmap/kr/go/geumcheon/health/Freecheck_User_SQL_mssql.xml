<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="FreecheckUser">
    
    <typeAlias  alias="Master" 				type="egovframework.kr.go.geumcheon.health.vo.Master"/>
    <typeAlias  alias="Company" 			type="egovframework.kr.go.geumcheon.health.vo.Company"/>
    <typeAlias  alias="Question" 			type="egovframework.kr.go.geumcheon.health.vo.Question"/>
    <typeAlias  alias="Question2" 			type="egovframework.kr.go.geumcheon.health.vo.Question2"/>
    <typeAlias  alias="Answer" 				type="egovframework.kr.go.geumcheon.health.vo.Answer"/>
    <typeAlias  alias="Handleitem" 			type="egovframework.kr.go.geumcheon.health.vo.Handleitem"/>
	<typeAlias  alias="zvl" type="egovframework.kr.go.geumcheon.health.util.ZValue"/>
    
    
   	<resultMap id="Company" 			class="Company">
		<result property="company_cd"		column="company_cd"/>
		<result property="id"				column="id"/>
		<result property="passwd"			column="passwd"/>
		<result property="company"			column="company"/>
		<result property="sa_no"			column="sa_no"/>
		<result property="ceo_name"			column="ceo_name"/>
		<result property="jumin"			column="jumin"/>
		<result property="pharmacist_no"	column="pharmacist_no"/>
		<result property="tel"				column="tel"/>
		<result property="fax"				column="fax"/>
		<result property="hp"				column="hp"/>
		<result property="post"				column="post"/>
		<result property="addr1"			column="addr1"/>
		<result property="addr2"			column="addr2"/>
		<result property="email"			column="email"/>
		<result property="industry_cd"		column="industry_cd"/>
		<result property="type_cd_01_yn"	column="type_cd_01_yn"/>
		<result property="type_cd_02_yn"	column="type_cd_02_yn"/>
		<result property="type_cd_03_yn"	column="type_cd_03_yn"/>
		<result property="type_cd_04_yn"	column="type_cd_04_yn"/>
		<result property="type_cd_05_yn"	column="type_cd_05_yn"/>
		<result property="type_cd_06_yn"	column="type_cd_06_yn"/>
		<result property="type_cd_07_yn"	column="type_cd_07_yn"/>
		<result property="type_cd_08_yn"	column="type_cd_08_yn"/>
		<result property="type_cd_09_yn"	column="type_cd_09_yn"/>
		<result property="type_cd_10_yn"	column="type_cd_10_yn"/>
		<result property="type_cd_11_yn"	column="type_cd_11_yn"/>
		<result property="insert_dt"		column="insert_dt"/>
		<result property="insert_ip"		column="insert_ip"/>
		<result property="insert_id"		column="insert_id"/>
		<result property="update_dt"		column="update_dt"/>
		<result property="update_ip"		column="update_ip"/>
		<result property="update_id"		column="update_id"/>
		<result property="year_cd"			column="year_cd"/>
		<result property="blog_url"			column="blog_url"/>		
		<result property="grade_cd"			column="grade_cd"/>	
		
		<result property="industry_name"	column="industry_name"/>
		<result property="divide_cd"			column="DIVIDE_CD"/>
	</resultMap>
	
	
	
   	<resultMap id="Master" 				class="Master">
		<result property="master_cd"		column="MASTER_CD"/>
		<result property="type_cd"			column="TYPE_CD"/>
		<result property="title"			column="TITLE"/>
		<result property="start_dt"			column="START_DT"/>
		<result property="end_dt"			column="END_DT"/>
		<result property="attachfile1"		column="ATTACHFILE1"/>
		<result property="attachfileorg1"	column="ATTACHFILEORG1"/>
		<result property="attachtype1"		column="ATTACHTYPE1"/>
		<result property="insert_dt"		column="INSERT_DT"/>
		<result property="insert_ip"		column="INSERT_IP"/>
		<result property="insert_id"		column="INSERT_ID"/>
		<result property="update_dt"		column="UPDATE_DT"/>
		<result property="update_ip"		column="UPDATE_IP"/>
		<result property="update_id"		column="UPDATE_ID"/>
		<result property="question_cnt"		column="QUESTION_CNT"/>
		<result property="gigan_open_yn"	column="GIGAN_OPEN_YN"/>
		<result property="contents"			column="CONTENTS"		jdbcType="CLOB"/>
	</resultMap>
	
	<resultMap id="Handleitem" 			class="Handleitem">
		<result property="handle_cd"  			column="HANDLE_CD"/>
		<result property="item_name"  			column="ITEM_NAME"/>
		<result property="unit"  				column="UNIT"/>
		<result property="field1"  				column="FIELD1"/>
		<result property="field2"  				column="FIELD2"/>
		<result property="field3"  				column="FIELD3"/>
		<result property="field4"  				column="FIELD4"/>
		<result property="company_cd"  			column="COMPANY_CD"/>
		<result property="company_id"  			column="COMPANY_ID"/>
		<result property="company_name"  		column="COMPANY_NAME"/>
		<result property="year_cd"  			column="YEAR_CD"/>
	</resultMap>
	
	
	
    <!-- 자율점검 사용자 로그인 -->
    <select id="FreecheckUserDAO.loginFreecheck" parameterClass="Company" resultMap="Company">
    	<![CDATA[
			SELECT 	A.* 
				FROM (
		    		SELECT	ROWNUM RNUM, A.COMPANY_CD
							, A.ID
							, A.PASSWD
							, A.COMPANY
							, A.SA_NO
							, A.CEO_NAME
							, A.JUMIN
							, A.PHARMACIST_NO
							, A.TEL
							, A.FAX
							, A.HP
							, A.POST
							, A.ADDR1
							, A.ADDR2
							, A.EMAIL
							, A.INDUSTRY_CD
							, A.TYPE_CD_01_YN
							, A.TYPE_CD_02_YN
							, A.TYPE_CD_03_YN
							, A.TYPE_CD_04_YN
							, A.TYPE_CD_05_YN
							, A.TYPE_CD_06_YN
							, A.TYPE_CD_07_YN
							, A.TYPE_CD_08_YN
							, A.TYPE_CD_09_YN
							, A.TYPE_CD_10_YN
							, A.TYPE_CD_11_YN
							, A.INSERT_DT
							, A.INSERT_IP
							, A.INSERT_ID
							, A.UPDATE_DT
							, A.UPDATE_IP
							, A.UPDATE_ID
							, A.YEAR_CD
							, A.BLOG_URL
							, A.GRADE_CD
							, B.NAME INDUSTRY_NAME
							, B.DIVIDE_CD
					FROM	HETB_CK_COMPANY A
							, HETB_CK_INDUSTRY B
					WHERE	A.STATUS = 'N'
							AND A.INDUSTRY_CD = B.INDUSTRY_CD(+)
							AND A.ID = '$id$' 
		]]>
		<isEqual property="forLogin" compareValue="Y">
			<![CDATA[
							AND PASSWD = #passwd#
				]]> 
		</isEqual>
    	<![CDATA[
							AND A.STATUS ='N'
		    		ORDER BY COMPANY_CD DESC
		        ) A
			WHERE A.RNUM = 1
    	]]>
    </select>
    
    <!-- 자율점검 사용자 로그인 -->
    <select id="FreecheckUserDAO.selectMasterCdDataByCompany" parameterClass="string" resultClass="zvl">
    	<![CDATA[
    		SELECT	A.COMPANY_CD
					, A.ID
					, A.INDUSTRY_CD
					, C.MASTER_CD
			FROM	HETB_CK_COMPANY A
					, HETB_CK_INDUSTRY B 
					, HETB_CK_LINKED_MASTER C
			WHERE	A.STATUS = 'N'
					AND A.INDUSTRY_CD = B.INDUSTRY_CD
					AND A.INDUSTRY_CD = C.INDUSTRY_CD
					AND A.ID = #id#
					AND A.STATUS ='N'
    	]]>
    </select>
    
	
    <select id="FreecheckUserDAO.selectCompanyInfo" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
  		SELECT	AA.* 
		FROM  	(
    		SELECT	ROWNUM RNUM
    				, A.COMPANY_CD
					, A.ID			as COMPANY_ID
					, A.COMPANY		as SANGHO_NAME
					, A.SA_NO		as NUMBER1
					, A.PHARMACIST_NO		as NUMBER2
					, A.CEO_NAME	as NAME1
					, A.TEL			as TEL
					, A.FAX			as FAX
					, A.HP			as HP
					, A.ADDR1		as ADDR1
					, A.ADDR2		as ADDR2
					, A.EMAIL		as EMAIL
					, B.DIVIDE_CD
			FROM	HETB_CK_COMPANY A
			INNER JOIN HETB_CK_INDUSTRY B ON B.INDUSTRY_CD = A.INDUSTRY_CD
			WHERE	A.STATUS = 'N'
					AND A.ID = '$id$' 
	    		ORDER BY COMPANY_CD DESC
        		) AA
		WHERE AA.RNUM = 1
    	]]>
    </select>
    
    
    <!-- 사용자 업소 타입(Master 타입) 정보 조회 -->
    <select id="FreecheckUserDAO.selectCompanyTypeInfo" parameterClass="Company" resultClass="java.lang.String">
    	<![CDATA[
    		SELECT  DECODE(TYPYE_CD, '', '00', TYPYE_CD) TYPE_CD
			FROM 	(
					SELECT	REPLACE((TYPYE1||TYPYE2||TYPYE3||TYPYE4||TYPYE5|| TYPYE6||TYPYE7||TYPYE8||TYPYE9||TYPYE10||TYPYE11), '', ',') TYPYE_CD
					FROM	(
							SELECT	DECODE(NVL(MAX(TYPE_CD_01_YN), 'N'), 'Y', '01') TYPYE1,
									DECODE(NVL(MAX(TYPE_CD_02_YN), 'N'), 'Y', '02') TYPYE2,
									DECODE(NVL(MAX(TYPE_CD_03_YN), 'N'), 'Y', '03') TYPYE3,
									DECODE(NVL(MAX(TYPE_CD_04_YN), 'N'), 'Y', '04') TYPYE4,
									DECODE(NVL(MAX(TYPE_CD_05_YN), 'N'), 'Y', '05') TYPYE5,
									DECODE(NVL(MAX(TYPE_CD_06_YN), 'N'), 'Y', '06') TYPYE6,
									DECODE(NVL(MAX(TYPE_CD_07_YN), 'N'), 'Y', '07') TYPYE7,
									DECODE(NVL(MAX(TYPE_CD_08_YN), 'N'), 'Y', '08') TYPYE8,
									DECODE(NVL(MAX(TYPE_CD_09_YN), 'N'), 'Y', '09') TYPYE9,
									DECODE(NVL(MAX(TYPE_CD_10_YN), 'N'), 'Y', '10') TYPYE10,
									DECODE(NVL(MAX(TYPE_CD_11_YN), 'N'), 'Y', '11') TYPYE11
							FROM	HETB_CK_COMPANY 
							WHERE	COMPANY_CD = $company_cd$ AND STATUS = 'N'
							)
					)
    	]]>
    </select>
    
    
    <!-- 점검 대상(Master)에 대한 상태 조회 -->
    <select id="FreecheckUserDAO.selectCheckStateList" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
    		SELECT	* 
			FROM  	(
					SELECT	ROWNUM RNUM, A.*
					FROM	(
							SELECT	A.MASTER_CD
									, A.TYPE_CD
									, A.TITLE
									, A.START_DT START_DT
									, A.END_DT END_DT
									, CASE 
										WHEN B.COMPANY_CD IS NOT NULL THEN '점검완료'
										WHEN TO_NUMBER(TO_CHAR(A.END_DT, 'YYYYMMDD')) < TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMMDD')) THEN '기간초과'
										ELSE '미점검'	
									  END STATUS
									, A.INSERT_DT INSERT_DT
							FROM	HETB_CK_MASTER A
									, HETB_CK_ANSWER B 
							WHERE	A.STATUS = 'N' 
									AND A.YEAR_CD = '$year_cd$'
									AND TO_DATE(START_DT, 'YY-MM-DD') <= TO_DATE(SYSDATE, 'YY-MM-DD')
									AND A.MASTER_CD = B.MASTER_CD(+) 
									AND B.COMPANY_CD(+) = $company_cd$
									AND B.STATUS(+) = 'N'
									AND A.TYPE_CD IN ($find_type_cd$) 
		]]>
		<![CDATA[
							ORDER BY		START_DT DESC
							) A
					)
			WHERE	RNUM > #firstIndex#
					AND  RNUM <= #firstIndex# + #recordCountPerPage#
    	]]>
    </select>
    
    
    
    <!-- 점검 대상(Master)에 대한 상태 조회 -->
    <select id="FreecheckUserDAO.selectCheckStateListTotCnt" parameterClass="Company" resultClass="int">
    	<![CDATA[
    		SELECT	count(*)
			FROM	HETB_CK_MASTER A
					, HETB_CK_ANSWER B 
			WHERE	A.STATUS = 'N' 
					AND A.YEAR_CD = '$year_cd$'
					AND TO_DATE(START_DT, 'YY-MM-DD') <= TO_DATE(SYSDATE, 'YY-MM-DD')
					AND A.MASTER_CD = B.MASTER_CD(+) 
					AND B.COMPANY_CD(+) = $company_cd$
					AND B.STATUS(+) = 'N'
					AND A.TYPE_CD IN ($find_type_cd$) 
    	]]>
    </select>
    
    <!-- 점검 대상(HETB_CK_MASTER)에 대한 업체 기본 정보(HETB_CK_ANSWER) (질문 불러오기 1/4) : 점검 대상(HETB_CK_ANSWER) 불러오기 -->
    
    <select id="FreecheckUserDAO.selectCompanyInfoAnswer" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
  		SELECT	A.* 
		FROM  	(
				SELECT	ROWNUM RNUM, ANSWER_CD
						, COMPANY_CD
						, COMPANY_ID
						, MASTER_CD
						, SANGHO_NAME
						, NUMBER1 , NUMBER2 , NUMBER3
						, NAME1
						, JUMIN1
						, NAME2
						, JUMIN2
						, NAME3
						, JUMIN3
						, ADDR1
						, ADDR2
						, EMAIL
						, TEL
						, HP
						, FAX
						, HOMEPAGE
						, ROOM_CNT
						, WORK_TIME1 , WORK_TIME2 , WORK_TIME3
						, CNT1 , CNT2 , CNT3 , CNT4 , CNT5 , CNT6 , CNT7 , CNT8 , CNT9
						, ARTICLE1_YN , ARTICLE2_YN , ARTICLE3_YN , ARTICLE4_YN , ARTICLE5_YN
						, ARTICLE6_YN , ARTICLE7_YN , ARTICLE8_YN , ARTICLE9_YN
						, OTHER1 , OTHER2 , OTHER3 , OTHER4 , OTHER5 , OTHER6 , OTHER7 , OTHER8
						, ATTACHFILE1 , ATTACHFILEORG1 , ATTACHTYPE1
						, STATUS
						, INSERT_DT , INSERT_IP , INSERT_ID , UPDATE_DT , UPDATE_IP , UPDATE_ID
				FROM	HETB_CK_ANSWER 
				WHERE	MASTER_CD = $master_cd$ 
		]]>
		<isNotEqual property="company_cd" compareValue="0">
			<![CDATA[
						AND COMPANY_CD = $company_cd$
				]]> 
		</isNotEqual>
		
		<![CDATA[
						AND STATUS = 'N'
	    		ORDER BY ANSWER_CD DESC
        		) A
		WHERE A.RNUM = 1
    	]]>
    </select>
    
    
    <select id="FreecheckUserDAO.selectCompanyInfoAnswerList" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
				SELECT	ROWNUM RNUM, ANSWER_CD
						, COMPANY_CD
						, COMPANY_ID
						, MASTER_CD
						, SANGHO_NAME
						, NUMBER1 , NUMBER2 , NUMBER3
						, NAME1
						, JUMIN1
						, NAME2
						, JUMIN2
						, NAME3
						, JUMIN3
						, ADDR1
						, ADDR2
						, EMAIL
						, TEL
						, HP
						, FAX
						, HOMEPAGE
						, ROOM_CNT
						, replace(WORK_TIME1, ',', '~') as WORK_TIME1
						, replace(WORK_TIME2, ',', '~') as WORK_TIME2
						, replace(WORK_TIME3, ',', '~') as WORK_TIME3
						, CNT1 , CNT2 , CNT3 , CNT4 , CNT5 , CNT6 , CNT7 , CNT8 , CNT9
						, ARTICLE1_YN , ARTICLE2_YN , ARTICLE3_YN , ARTICLE4_YN , ARTICLE5_YN
						, ARTICLE6_YN , ARTICLE7_YN , ARTICLE8_YN , ARTICLE9_YN
						, OTHER1 , OTHER2 , OTHER3 , OTHER4 , OTHER5 , OTHER6 , OTHER7 , OTHER8
						, ATTACHFILE1 , ATTACHFILEORG1 , ATTACHTYPE1
						, STATUS
						, INSERT_DT , INSERT_IP , INSERT_ID , UPDATE_DT , UPDATE_IP , UPDATE_ID
				FROM	HETB_CK_ANSWER 
				WHERE	MASTER_CD = $master_cd$ 
						AND STATUS = 'N'
	    		/* ORDER BY SANGHO_NAME DESC */
    	]]>
    </select>
    
    <!-- 점검 대상(HETB_CK_MASTER)에 대한 점검 항목 불러오기 (질문 불러오기 2/4) : 점검 대상(HETB_CK_MASTER) 불러오기 -->
    
    <select id="FreecheckUserDAO.selectMaster" parameterClass="Company" resultMap="Master">
    	<![CDATA[
    		SELECT	MASTER_CD
					, TYPE_CD
					, TITLE
					, START_DT 
					, END_DT 
					, ATTACHFILE1
					, ATTACHFILEORG1
					, ATTACHTYPE1
					, INSERT_DT
					, INSERT_IP
					, INSERT_ID
					, UPDATE_DT
					, UPDATE_IP
					, UPDATE_ID
					, CONTENTS
					, (	SELECT	COUNT(*) 
						FROM	HETB_CK_QUESTION 
						WHERE	MASTER_CD = $master_cd$
								AND STATUS = 'N') QUESTION_CNT
					, CASE
						WHEN (TO_DATE(START_DT, 'YY-MM-DD') >= TO_DATE(SYSDATE, 'YY-MM-DD')) THEN 'Y'
						ELSE 'N'
					END GIGAN_OPEN_YN 
			FROM	HETB_CK_MASTER  
			WHERE	MASTER_CD = $master_cd$
					AND STATUS = 'N'	
    	]]>
    </select>
    
    
    <!-- 점검 대상(HETB_CK_MASTER)에 대한 점검 항목 불러오기 (질문 불러오기 3/4) : 점검 항목(HETB_CK_QUESTION) 불러오기 -->
    <select id="FreecheckUserDAO.selectQuestion" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT	A.QUESTION_CD
					, A.QUESTION
					, A.QUEST_TYPE_CD
					, A.MULTI_CHECK_YN
					, A.OTHER_YN
					, B.QUESTION2_CD
					, B.OTHER
			FROM	HETB_CK_QUESTION A
					LEFT OUTER JOIN 
						(SELECT	MASTER_CD
									, COMPANY_CD
									, QUESTION_CD
									, LTRIM(MAX(SYS_CONNECT_BY_PATH(QUESTION2_CD,',')),',') QUESTION2_CD
									, REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH(OTHER,'º')),'º'), 'º', '') OTHER
						FROM		( SELECT	MASTER_CD
												, COMPANY_CD
												, QUESTION_CD
												, (':'||QUESTION2_CD||':') QUESTION2_CD
												, REPLACE(OTHER, 'º', '') OTHER
												, ROW_NUMBER() OVER ( PARTITION BY MASTER_CD
																	, COMPANY_CD
																	, QUESTION_CD ORDER BY QUESTION_CD
																	, QUESTION2_CD) SPAN
									FROM	HETB_CK_ANSWER2
									WHERE	MASTER_CD = $master_cd$
											AND COMPANY_CD = $company_cd$
											AND STATUS = 'N')
									START WITH SPAN = 1
									CONNECT BY PRIOR MASTER_CD = MASTER_CD
												AND PRIOR COMPANY_CD = COMPANY_CD
												AND PRIOR QUESTION_CD = QUESTION_CD
												AND PRIOR SPAN = SPAN -1 
									GROUP BY MASTER_CD, COMPANY_CD, QUESTION_CD)
						B ON A.MASTER_CD = B.MASTER_CD AND A.QUESTION_CD = B.QUESTION_CD 
			WHERE	A.MASTER_CD = $master_cd$ AND A.STATUS = 'N'
					/* 
					AND A.MASTER_CD = B.MASTER_CD
					AND A.QUESTION_CD = B.QUESTION_CD
					*/
			ORDER BY A.QUESTION_CD ASC
    	]]>
    </select>
    
    
    <!-- 점검 대상(HETB_CK_MASTER)에 대한 점검 항목 불러오기 (질문 불러오기 4/4) : 점검 항목의 선택할 수 있는 질문의 선택형 답변(?) 항목 (HETB_CK_QUESTION2) 불러오기 -->
    
    <select id="FreecheckUserDAO.selectAnswer" parameterClass="Question2" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT	QUESTION2_CD
					, QUESTION2 
					, VALIDATION
			FROM	HETB_CK_QUESTION2
			WHERE	QUESTION1_CD = $question_cd$ 
					AND MASTER_CD = $master_cd$ 
					AND STATUS = 'N' 
			ORDER BY ORDERBY ASC
    	]]>
    </select>
    
    <select id="FreecheckUserDAO.selectHandleItemList" parameterClass="Answer" resultMap="Handleitem">
    	<![CDATA[
    		SELECT 	HANDLE_CD
					, ITEM_NAME
					, UNIT
					, FIELD1
					, FIELD2
					, FIELD3
					, FIELD4
					, YEAR_CD
					, COMPANY_CD
					, COMPANY_ID
					, COMPANY_NAME
					, STATUS
			FROM 	HETB_CK_HANDLEITEM
			WHERE 	COMPANY_CD = $company_cd$
					AND YEAR_CD = '$year_cd$'
    	]]>
    </select>
    
    <insert id="FreecheckUserDAO.insertHandleItem" parameterClass="Handleitem">
    	<![CDATA[
    		INSERT 
				INTO	HETB_CK_HANDLEITEM 
					(	HANDLE_CD
						, ITEM_NAME
						, UNIT
						, FIELD1
						, FIELD2
						, FIELD3
						, FIELD4
						, YEAR_CD
						, COMPANY_CD
						, COMPANY_ID
						, COMPANY_NAME
						, STATUS)
				VALUES ( (SELECT NVL(MAX(HANDLE_CD), 0) + 1 FROM HETB_CK_HANDLEITEM) 
						, '$item_name$'
						, '$unit$'
						, '$field1$'
						, '$field2$'
						, '$field3$'
						, '$field4$'
						, '$year_cd$'
						, $company_cd$
						, '$company_id$'
						, '$company_name$'
						, '$status$' )
    	]]>
    </insert>
    
    <update id="FreecheckUserDAO.updateHandleItem" parameterClass="Handleitem">
    	<![CDATA[
    		UPDATE 	HETB_CK_HANDLEITEM
    		SET		ITEM_NAME			= '$item_name$'
					, UNIT				= '$unit$'
					, FIELD1			= '$field1$'
					, FIELD2			= '$field2$'
					, FIELD3			= '$field3$'
					, FIELD4			= '$field4$'
					, YEAR_CD			= '$year_cd$'
					, COMPANY_CD		= $company_cd$
					, COMPANY_ID		= '$company_id$'
					, COMPANY_NAME		= '$company_name$'
			WHERE 	HANDLE_CD			= $handle_cd$
    	]]>
    </update>
    
    
    <update id="FreecheckUserDAO.deleteHandleItem" parameterClass="Handleitem">
    	<![CDATA[
    		DELETE 	FROM HETB_CK_HANDLEITEM
			WHERE 	HANDLE_CD			= $handle_cd$
    	]]>
    </update>
    
    
    <insert id="FreecheckUserDAO.checkQuestion" parameterClass="Answer">
    	<![CDATA[ 
    		INSERT 
				INTO	HETB_CK_ANSWER 
					(	answer_cd
						, company_cd
						, company_id
						, master_cd
						, sangho_name
						, number1
						, number2
						, number3
						, name1
						, jumin1
						, name2
						, jumin2
						, name3
						, jumin3
						, addr1
						, addr2
						, email
						, tel
						, hp
						, fax
						, homepage
						, room_cnt
						, work_time1
						, work_time2
						, work_time3
						, cnt1
						, cnt2
						, cnt3
						, cnt4
						, cnt5
						, cnt6
						, cnt7
						, cnt8
						, cnt9
						, article1_yn
						, article2_yn
						, article3_yn
						, article4_yn
						, article5_yn
						, article6_yn
						, article7_yn
						, article8_yn
						, article9_yn
						, other1
						, other2
						, other3
						, other4
						, other5
						, other6
						, other7
						, other8
						, attachfile1
						, attachfileorg1
						, attachtype1
						, status
						, insert_dt
						, insert_ip
						, insert_id
						, update_dt
						, update_ip
						, update_id )
				VALUES ( (SELECT NVL(MAX(answer_cd), 0)+1 FROM HETB_CK_ANSWER)
						, $company_cd$
						, '$company_id$'
						, $master_cd$
						, '$sangho_name$'
						, '$number1$'
						, '$number2$'
						, '$number3$'
						, '$name1$'
						, '$jumin1$'
						, '$name2$'
						, '$jumin2$'
						, '$name3$'
						, '$jumin3$'
						, '$addr1$'
						, '$addr2$'
						, '$email$'
						, '$tel$'
						, '$hp$'
						, '$fax$'
						, '$homepage$'
						, $room_cnt$
						, '$work_time1$'
						, '$work_time2$'
						, '$work_time3$'
						, $cnt1$
						, $cnt2$
						, $cnt3$
						, $cnt4$
						, $cnt5$
						, $cnt6$
						, $cnt7$
						, $cnt8$
						, $cnt9$
						, '$article1_yn$'
						, '$article2_yn$'
						, '$article3_yn$'
						, '$article4_yn$'
						, '$article5_yn$'
						, '$article6_yn$'
						, '$article7_yn$'
						, '$article8_yn$'
						, '$article9_yn$'
						, '$other1$'
						, '$other2$'
						, '$other3$'
						, '$other4$'
						, '$other5$'
						, '$other6$'
						, '$other7$'
						, '$other8$'
						, '$attachfile1$'
						, '$attachfileorg1$'
						, '$attachtype1$'
						, '$status$'
						, SYSDATE
						, '$insert_ip$'
						, '$insert_id$'
						, SYSDATE
						, '$update_ip$'
						, '$update_id$' )
    	]]>
    
    </insert>
    
    
    <insert id="FreecheckUserDAO.checkQuestion2" parameterClass="Answer">
    	<![CDATA[ 
    		INSERT INTO 
			HETB_CK_ANSWER2 (
				ANSWER2_CD
				, COMPANY_CD
				, COMPANY_ID
				, MASTER_CD
				, QUESTION_CD
				, QUESTION2_CD
				, OTHER)
			VALUES( 
				(SELECT NVL(MAX(ANSWER2_CD), 0)+1 FROM HETB_CK_ANSWER2)
				, $company_cd$
				, '$company_id$'
				, $master_cd$
				, $question_cd$
				, $question2_cd$
				, '$other$')
    	]]>
    
    </insert>
    
    
    
    <update id="FreecheckUserDAO.updateCompanyInfoForQuestion" parameterClass="Answer">
    	<![CDATA[
    		UPDATE	HETB_CK_COMPANY 
			SET 	COMPANY				= '$sangho_name$'
					, SA_NO				= '$number1$'
					, CEO_NAME			= '$name1$'
					, TEL				= '$tel$'
					, FAX				= '$fax$'
					, HP				= '$hp$'
					, ADDR2				= '$addr2$'
					, EMAIL				= '$email$'
			WHERE	company_cd			= $company_cd$
    	]]>
    </update>
    
    
    <update id="FreecheckUserDAO.checkUpdateQuestion" parameterClass="Answer">
    	<![CDATA[ 
    		UPDATE	HETB_CK_ANSWER 
			SET 	company_cd			= $company_cd$
					, company_id		= '$company_id$'
					, master_cd			= $master_cd$
					, sangho_name		= '$sangho_name$'
					, number1			= '$number1$'
					, number2			= '$number2$'
					, number3			= '$number3$'
					, name1				= '$name1$'
					, jumin1			= '$jumin1$'
					, name2				= '$name2$'
					, jumin2			= '$jumin2$'
					, name3				= '$name3$'
					, jumin3			= '$jumin3$'
					, addr1				= '$addr1$'
					, addr2				= '$addr2$'
					, email				= '$email$'
					, tel				= '$tel$'
					, hp				= '$hp$'
					, fax				= '$fax$'
					, homepage			= '$homepage$'
					, room_cnt			= $room_cnt$
					, work_time1		= '$work_time1$'
					, work_time2		= '$work_time2$'
					, work_time3		= '$work_time3$'
					, cnt1				= $cnt1$
					, cnt2				= $cnt2$
					, cnt3				= $cnt3$
					, cnt4				= $cnt4$
					, cnt5				= $cnt5$
					, cnt6				= $cnt6$
					, cnt7				= $cnt7$
					, cnt8				= $cnt8$
					, cnt9				= $cnt9$
					, article1_yn		= '$article1_yn$'
					, article2_yn		= '$article2_yn$'
					, article3_yn		= '$article3_yn$'
					, article4_yn		= '$article4_yn$'
					, article5_yn		= '$article5_yn$'
					, article6_yn		= '$article6_yn$'
					, article7_yn		= '$article7_yn$'
					, article8_yn		= '$article8_yn$'
					, article9_yn		= '$article9_yn$'
					, other1			= '$other1$'
					, other2			= '$other2$'
					, other3			= '$other3$'
					, other4			= '$other4$'
					, other5			= '$other5$'
					, other6			= '$other6$'
					, other7			= '$other7$'
					, other8			= '$other8$'
					, attachfile1		= '$attachfile1$'
					, attachfileorg1	= '$attachfileorg1$'
					, attachtype1		= '$attachtype1$'
					, status			= '$status$'
					, update_dt			= SYSDATE
					, update_ip			= '$update_ip$'
					, update_id			= '$update_id$'
			WHERE 	answer_cd	= $answer_cd$
    	]]>
    
    </update>
    
    
    <delete id="FreecheckUserDAO.deleteCheckedQuestion2" parameterClass="Answer">
    	<![CDATA[
    		DELETE 
    		FROM 	HETB_CK_ANSWER2 
    		WHERE 	COMPANY_CD		= $company_cd$
    				AND MASTER_CD 	= $master_cd$
    	]]>
    </delete>
        
    <select id="FreecheckUserDAO.checkListState" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT b.MASTER_CD, a.ARTICLE9_YN, b.TYPE_CD, NVL(b.CNT, 0) as QUESTION_CNT, 
				NVL(a.ANSWER_CNT, 0) as ANSWER_CNT, NVL(a.ANSWER2_CNT, 0) as ANSWER2_CNT, b.START_DT, b.END_DT, b.TITLE
			FROM 
			(
			  SELECT A.ID, B.MASTER_CD, NVL(B.CNT, 0) AS ANSWER_CNT, NVL(C.CNT, 0) AS ANSWER2_CNT, B.ARTICLE9_YN 
			  FROM HETB_CK_COMPANY A, 
			  (
			  	SELECT z.COMPANY_ID, z.MASTER_CD, y.TITLE, COUNT(z.COMPANY_ID) AS CNT, z.ARTICLE9_YN
			    FROM HETB_CK_ANSWER z, HETB_CK_MASTER y
			    WHERE z.COMPANY_ID = '$id$' 
			    AND y.MASTER_CD IN ($masterCdData$)
			    AND y.MASTER_CD = z.MASTER_CD 
			    AND z.STATUS = 'N'
			    GROUP BY z.COMPANY_ID, z.MASTER_CD, y.TITLE, z.ARTICLE9_YN
			  ) B, 
			  (
			  	SELECT z.COMPANY_ID, z.MASTER_CD, y.TYPE_CD, y.TITLE, COUNT(z.COMPANY_ID) AS CNT
			    FROM HETB_CK_ANSWER2 z, HETB_CK_MASTER y
			    WHERE z.COMPANY_ID = '$id$' 
			    AND y.MASTER_CD IN ($masterCdData$)
			    AND y.MASTER_CD = z.MASTER_CD 
			    AND z.STATUS = 'N'
			    AND y.YEAR_CD = '$year_cd$'
			    GROUP BY z.COMPANY_ID, z.MASTER_CD, y.TYPE_CD, y.TITLE
			  ) C
			  WHERE A.ID = '$id$'
			    AND A.STATUS = 'N'
			    AND A.ID = B.COMPANY_ID(+)
			    AND A.ID = C.COMPANY_ID(+)
			    AND C.MASTER_CD = B.MASTER_CD
			) a, 
		    (
		      SELECT z.MASTER_CD, y.TYPE_CD, y.TITLE, COUNT(z.QUESTION_CD) AS CNT, y.START_DT, y.END_DT
			  FROM HETB_CK_QUESTION z, HETB_CK_MASTER y
			  WHERE y.MASTER_CD IN ($masterCdData$)
			  AND y.MASTER_CD = z.MASTER_CD 
			  AND z.STATUS = 'N'
			  AND y.YEAR_CD = '$year_cd$'
			  GROUP BY z.MASTER_CD, y.TYPE_CD, y.TITLE, y.START_DT, y.END_DT
			) b
			WHERE b.MASTER_CD = a.MASTER_CD(+)
			ORDER BY TYPE_CD
    	]]>
    </select>
    
    
    <select id="FreecheckUserDAO.selectNextFreecheck" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT b.MASTER_CD, NVL(a.ARTICLE9_YN, 'N') as ARTICLE9_YN, b.TYPE_CD, NVL(b.CNT, 0) as QUESTION_CNT, NVL(a.ANSWER_CNT, 0) as ANSWER_CNT, NVL(a.ANSWER2_CNT, 0) as ANSWER2_CNT, b.START_DT, b.END_DT, b.TITLE
			FROM (SELECT A.ID, B.MASTER_CD, NVL(B.CNT, 0) AS ANSWER_CNT, NVL(C.CNT, 0) AS ANSWER2_CNT, B.ARTICLE9_YN 
			  FROM HETB_CK_COMPANY A
			    , (SELECT z.COMPANY_ID, z.MASTER_CD, y.TITLE, COUNT(z.COMPANY_ID) AS CNT, z.ARTICLE9_YN
			    FROM HETB_CK_ANSWER z, HETB_CK_MASTER y
			    WHERE z.COMPANY_ID = '$id$' 
			    AND y.TYPE_CD IN ($find_type_cd$)
			    AND y.MASTER_CD = z.MASTER_CD 
			    AND z.STATUS = 'N'
			   GROUP BY z.COMPANY_ID, z.MASTER_CD, y.TITLE, z.ARTICLE9_YN) B
			    , (SELECT z.COMPANY_ID, z.MASTER_CD, y.TYPE_CD, y.TITLE, COUNT(z.COMPANY_ID) AS CNT
			    FROM HETB_CK_ANSWER2 z, HETB_CK_MASTER y
			    WHERE z.COMPANY_ID = '$id$' 
			    AND y.TYPE_CD IN ($find_type_cd$)
			    AND y.MASTER_CD = z.MASTER_CD 
			    AND z.STATUS = 'N'
			    AND y.YEAR_CD = '$year_cd$'
			    GROUP BY z.COMPANY_ID, z.MASTER_CD, y.TYPE_CD, y.TITLE) C
			  WHERE A.ID = '$id$'
			    AND A.STATUS = 'N'
			    AND A.ID = B.COMPANY_ID(+)
			    AND A.ID = C.COMPANY_ID(+)
			    AND C.MASTER_CD = B.MASTER_CD) a
			    , (SELECT z.MASTER_CD, y.TYPE_CD, y.TITLE, COUNT(z.QUESTION_CD) AS CNT, y.START_DT, y.END_DT
			  FROM HETB_CK_QUESTION z, HETB_CK_MASTER y
			  WHERE y.TYPE_CD IN ($find_type_cd$)
			  AND y.MASTER_CD = z.MASTER_CD 
			  AND z.STATUS = 'N'
			  AND y.YEAR_CD = '$year_cd$'
			  AND y.MASTER_CD <> $master_cd$
			  GROUP BY z.MASTER_CD, y.TYPE_CD, y.TITLE, y.START_DT, y.END_DT) b
			WHERE b.MASTER_CD = a.MASTER_CD(+)
			ORDER BY TYPE_CD
    	]]>
    </select>
    
    <select id="FreecheckUserDAO.selectItemListForCheck" parameterClass="int" resultClass="zvl">
    	<![CDATA[			
			  SELECT A.ITEM_ID,
			       A.ITEM_NAME,
			       A.MASTER_CD,
			       A.EXCEPT_NUM,
			       TO_CHAR(A.REG_DATE, 'YYYY-MM-DD') AS REG_DATE,
			       A.YEAR_CD
			  FROM HETB_CK_ITEM A
			  WHERE A.MASTER_CD = #masterCd#
    	]]>
    </select>
    	
    <select id="FreecheckUserDAO.selectHandleitemListU" parameterClass="company" resultClass="zvl">
    	<![CDATA[			
			  SELECT 
			  	HANDLE_CD,ITEM_NAME,UNIT,COMPANY_CD,COMPANY_ID,COMPANY_NAME,YEAR_CD,ORDER_NO,STATUS,
    			FIELD1,FIELD2,FIELD3,FIELD4,FIELD5
			  FROM HETB_CK_HANDLEITEM
			  WHERE COMPANY_ID = #id#
			  AND YEAR_CD = #year_cd#
    	]]>
    </select>
    	
    <insert id="FreecheckUserDAO.addHandleitem" parameterClass="zvl">
		<selectKey resultClass="java.lang.Long" keyProperty="handleCd">
			SELECT To_Number('0' || Max(HANDLE_CD))+1 FROM HETB_CK_HANDLEITEM
		</selectKey>			
    	<![CDATA[ 
    		INSERT INTO HETB_CK_HANDLEITEM ( 
    			HANDLE_CD,ITEM_NAME,UNIT,COMPANY_CD,COMPANY_ID,COMPANY_NAME,YEAR_CD,ORDER_NO,STATUS,
    			FIELD1,FIELD2,FIELD3,FIELD4,FIELD5 
    		)
			VALUES ( 
				#handleCd#,#itemName#,#unit#,#companyCd#,#companyId#,#companyName#,#yearCd#,#orderNo#,#status#,
				#field1#,#field2#,#field3#,#field4#,#field5# 
			)
    	]]>
    
    </insert>
    
    <delete id="FreecheckUserDAO.delHandleitem" parameterClass="company">
    	<![CDATA[			
			  DELETE FROM HETB_CK_HANDLEITEM
			  WHERE COMPANY_ID = #id#
			  AND YEAR_CD = #year_cd#
    	]]>
    </delete>
    	
    
</sqlMap>