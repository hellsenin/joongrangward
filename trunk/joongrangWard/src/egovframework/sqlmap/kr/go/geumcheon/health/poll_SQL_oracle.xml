<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="satisfaction">

    <typeAlias  alias="Industry" 		type="egovframework.kr.go.geumcheon.health.vo.Industry"/>
    <typeAlias  alias="Company" 		type="egovframework.kr.go.geumcheon.health.vo.Company"/>
    <typeAlias  alias="Master" 			type="egovframework.kr.go.geumcheon.health.vo.Master"/>
    <typeAlias  alias="Question" 		type="egovframework.kr.go.geumcheon.health.vo.Question"/>
    <typeAlias  alias="Question2" 		type="egovframework.kr.go.geumcheon.health.vo.Question2"/>
    <typeAlias  alias="Handleitem" 		type="egovframework.kr.go.geumcheon.health.vo.Handleitem"/>
    <typeAlias  alias="String" 			type="java.lang.String"/>
	<typeAlias  alias="zvl" type="egovframework.kr.go.geumcheon.health.util.ZValue"/>
	    
    
   	<resultMap id="IndustryList" 		class="Industry">
		<result property="industry_cd"				column="INDUSTRY_CD"/>
		<result property="divide_cd"				column="DIVIDE_CD"/>
		<result property="divide_cd_name"			column="DIVIDE_CD_NAME"/>
		<result property="name"						column="NAME"/>
		<result property="use_yn"					column="USE_YN"/>
		<result property="use_yn_name"				column="USE_YN_NAME"/>
		<result property="insert_dt"				column="INSERT_DT"/>
		<result property="industry_cnt"				column="INDUSTRY_CNT"/>
		<result property="year_cd"					column="YEAR_CD"/>
	</resultMap>
	
   	<resultMap id="IndustryListForSelection" 		class="Industry">
		<result property="industry_cd"				column="INDUSTRY_CD"/>
		<result property="divide_cd"				column="DIVIDE_CD"/>
		<result property="divide_cd_name"			column="DIVIDE_CD_NAME"/>
		<result property="name"						column="NAME"/>
	</resultMap>
	
   	<resultMap id="Industry" 		class="Industry">
		<result property="industry_cd"				column="INDUSTRY_CD"/>
		<result property="divide_cd"				column="DIVIDE_CD"/>
		<result property="divide_cd_name"			column="DIVIDE_CD_NAME"/>
		<result property="name"						column="NAME"/>
		<result property="use_yn"					column="USE_YN"/>
		<result property="use_yn_name"				column="USE_YN_NAME"/>
		<result property="insert_dt"				column="INSERT_DT"/>
		<result property="update_dt"				column="UPDATE_DT"/>
	</resultMap>
	
   	<resultMap id="CompanyList" 		class="Company">
		<result property="company_cd"		column="COMPANY_CD"/>
		<result property="id"				column="ID"/>
		<result property="passwd"			column="PASSWD"/>
		<result property="company"			column="COMPANY"/>
		<result property="sa_no"			column="SA_NO"/>
		<result property="ceo_name"			column="CEO_NAME"/>
		<result property="jumin"			column="JUMIN"/>
		<result property="pharmacist_no"	column="PHARMACIST_NO"/>
		<result property="tel"				column="TEL"/>
		<result property="fax"				column="FAX"/>
		<result property="hp"				column="HP"/>
		<result property="post"				column="POST"/>
		<result property="addr1"			column="ADDR1"/>
		<result property="addr2"			column="ADDR2"/>
		<result property="email"			column="EMAIL"/>
		
		<result property="industry_cd"		column="INDUSTRY_CD"/>
		<result property="type_cd_01_yn"	column="TYPE_CD_01_YN"/>
		<result property="type_cd_02_yn"	column="TYPE_CD_02_YN"/>
		<result property="type_cd_03_yn"	column="TYPE_CD_03_YN"/>
		<result property="type_cd_04_yn"	column="TYPE_CD_04_YN"/>
		<result property="type_cd_05_yn"	column="TYPE_CD_05_YN"/>
		<result property="type_cd_06_yn"	column="TYPE_CD_06_YN"/>
		<result property="type_cd_07_yn"	column="TYPE_CD_07_YN"/>
		<result property="type_cd_08_yn"	column="TYPE_CD_08_YN"/>
		<result property="type_cd_09_yn"	column="TYPE_CD_09_YN"/>
		<result property="type_cd_10_yn"	column="TYPE_CD_10_YN"/>
		<result property="type_cd_11_yn"	column="TYPE_CD_11_YN"/>
		<result property="insert_dt"		column="insert_dt"/>
		<result property="grade_cd"			column="grade_cd"/>
		<result property="grade_cd_name"	column="grade_cd_name"/>
		<result property="industry_name"	column="industry_name"/>
		<result property="anser_cnt"		column="anser_cnt"/>
		<result property="year_cd"			column="year_cd"/>
	</resultMap>
	
	
   	<resultMap id="Company" 			class="Company">
		<result property="company_cd"		column="company_cd"/>
		<result property="id"				column="id"/>
		<result property="passwd"			column="passwd"/>
		<result property="company"			column="company"/>
		<result property="sa_no"			column="sa_no"/>
		<result property="ceo_name"			column="ceo_name"/>
		<result property="jumin"			column="jumin"/>
		<result property="pharmacist_no"	column="pharmacist_no"/>
		<result property="tel"				column="tel"/>
		<result property="fax"				column="fax"/>
		<result property="hp"				column="hp"/>
		<result property="post"				column="post"/>
		<result property="addr1"			column="addr1"/>
		<result property="addr2"			column="addr2"/>
		<result property="email"			column="email"/>
		<result property="industry_cd"		column="industry_cd"/>
		<result property="type_cd_01_yn"	column="type_cd_01_yn"/>
		<result property="type_cd_02_yn"	column="type_cd_02_yn"/>
		<result property="type_cd_03_yn"	column="type_cd_03_yn"/>
		<result property="type_cd_04_yn"	column="type_cd_04_yn"/>
		<result property="type_cd_05_yn"	column="type_cd_05_yn"/>
		<result property="type_cd_06_yn"	column="type_cd_06_yn"/>
		<result property="type_cd_07_yn"	column="type_cd_07_yn"/>
		<result property="type_cd_08_yn"	column="type_cd_08_yn"/>
		<result property="type_cd_09_yn"	column="type_cd_09_yn"/>
		<result property="type_cd_10_yn"	column="type_cd_10_yn"/>
		<result property="type_cd_11_yn"	column="type_cd_11_yn"/>
		<result property="insert_dt"		column="insert_dt"/>
		<result property="insert_ip"		column="insert_ip"/>
		<result property="insert_id"		column="insert_id"/>
		<result property="update_dt"		column="update_dt"/>
		<result property="update_ip"		column="update_ip"/>
		<result property="update_id"		column="update_id"/>
		<result property="year_cd"			column="year_cd"/>
		<result property="blog_url"			column="blog_url"/>		
		<result property="grade_cd"			column="grade_cd"/>
		
		<result property="industry_name"	column="industry_name"/>
		
	</resultMap>
	
	
   	<resultMap id="Master" 				class="Master">
		<result property="master_cd"		column="MASTER_CD"/>
		<result property="type_cd"			column="TYPE_CD"/>
		<result property="title"			column="TITLE"/>
		<result property="start_dt"			column="START_DT"/>
		<result property="end_dt"			column="END_DT"/>
		<result property="attachfile1"		column="ATTACHFILE1"/>
		<result property="attachfileorg1"	column="ATTACHFILEORG1"/>
		<result property="attachtype1"		column="ATTACHTYPE1"/>
		<result property="insert_dt"		column="INSERT_DT"/>
		<result property="insert_ip"		column="INSERT_IP"/>
		<result property="insert_id"		column="INSERT_ID"/>
		<result property="update_dt"		column="UPDATE_DT"/>
		<result property="update_ip"		column="UPDATE_IP"/>
		<result property="update_id"		column="UPDATE_ID"/>
		<result property="question_cnt"		column="QUESTION_CNT"/>
		<result property="gigan_open_yn"	column="GIGAN_OPEN_YN"/>
		<result property="contents"			column="CONTENTS"		jdbcType="CLOB"/>
		<result property="year_cd"			column="YEAR_CD"/>
	</resultMap>
	
	<resultMap id="Handleitem" 			class="Handleitem">
		<result property="handle_cd"  			column="HANDLE_CD"/>
		<result property="item_name"  			column="ITEM_NAME"/>
		<result property="unit"  				column="UNIT"/>
		<result property="field1"  				column="FIELD1"/>
		<result property="field2"  				column="FIELD2"/>
		<result property="field3"  				column="FIELD3"/>
		<result property="field4"  				column="FIELD4"/>
		<result property="company_cd"  			column="COMPANY_CD"/>
		<result property="company_id"  			column="COMPANY_ID"/>
		<result property="company_name"  		column="COMPANY_NAME"/>
		<result property="year_cd"  			column="YEAR_CD"/>
	</resultMap>
	
    	
	<select id="pollDAO.selectCheckformList" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT	A.MASTER_CD
					, A.TYPE_CD
					, A.TITLE
					, A.ATTACHFILE1
					, A.START_DT
					, A.END_DT
					, A.INSERT_DT
					, A.QUESTION_CNT
					, A.ANSWER_CNT
			FROM	( 
					SELECT	A.MASTER_CD
							, A.TYPE_CD
							, A.TITLE
							, A.ATTACHFILE1
							, A.START_DT
							, A.END_DT
							, A.INSERT_DT
							, NVL(B.QUESTION_CNT, 0) QUESTION_CNT
							, NVL(C.ANSWER_CNT, 0) ANSWER_CNT
					FROM	HETB_CK_MASTER A
							,  ( 
								SELECT	MASTER_CD, COUNT(*) QUESTION_CNT 
								FROM	HETB_CK_QUESTION WHERE STATUS = 'N'  
								GROUP BY MASTER_CD  
							) B
							,  
							( 
							  SELECT MASTER_CD, COUNT(*) AS ANSWER_CNT
							  FROM(							  
								SELECT	DISTINCT MASTER_CD, COMPANY_ID 
								FROM	HETB_CK_ANSWER2 
								WHERE STATUS = 'N'
							  )
							  GROUP BY MASTER_CD  
							) C
					WHERE	A.STATUS = 'N' 
					AND A.MASTER_CD = B.MASTER_CD(+) 
					AND A.MASTER_CD = C.MASTER_CD(+) 
					AND A.YEAR_CD = '000000'
					ORDER BY A.MASTER_CD DESC   
					) A
			ORDER BY INSERT_DT ASC
		]]>
	</select>
		
	<insert id="pollDAO.insertCheckform" parameterClass="Master">
		<![CDATA[
		    INSERT 
		      INTO  HETB_CK_MASTER
		        (	MASTER_CD		
					, TYPE_CD
					, TITLE
					, START_DT
					, END_DT
					, ATTACHFILE1
					, INSERT_DT
					, INSERT_ID
			 		, UPDATE_DT
					, UPDATE_ID
					, CONTENTS
					, STATUS
					, YEAR_CD
		        ) 
		    VALUES  
		        (	(SELECT NVL(MAX(MASTER_CD), 0)+1 FROM HETB_CK_MASTER)
					, (SELECT NVL(MAX(TYPE_CD), 0)+1 FROM HETB_CK_MASTER WHERE YEAR_CD = '000000')
					, '$title$'
					, #start_dt#
					, #end_dt#
					, '$attachfile1$'
					,  SYSDATE
					, '$insert_id$'
					,  SYSDATE
					, '$update_id$'
					, '$contents$'
					, 'N'
					, '000000'
		        ) 
		]]>
	</insert>
	
	<select id="pollDAO.selectCheckform" parameterClass="java.lang.Integer" resultMap="Master">
		<![CDATA[
			SELECT	MASTER_CD
					, TYPE_CD
					, TITLE
					, START_DT
					, END_DT
					, ATTACHFILE1
					, ATTACHFILEORG1
					, ATTACHTYPE1
					, INSERT_DT
					, INSERT_IP
					, INSERT_ID
			 		, UPDATE_DT
					, UPDATE_IP
					, UPDATE_ID
					, CONTENTS 
					, YEAR_CD 
					, ( 
						SELECT	COUNT(*) 
						FROM	HETB_CK_QUESTION
						WHERE	MASTER_CD=$master_cd$ 
								AND STATUS = 'N'
					) QUESTION_CNT
					, CASE 
						WHEN (TO_DATE(START_DT, 'YY-MM-DD') > TO_DATE(SYSDATE, 'YY-MM-DD')) THEN 'Y'
						ELSE 'N'
					END GIGAN_OPEN_YN
			FROM	HETB_CK_MASTER
			WHERE	MASTER_CD = $master_cd$
					AND STATUS = 'N' 
		]]>
	</select>
	
					
	<update id="pollDAO.updateCheckform" parameterClass="Master">
		<![CDATA[
            UPDATE  HETB_CK_MASTER 
               SET	
					  TITLE				= '$title$'
					, START_DT			= #start_dt#
					, END_DT			= #end_dt#
		]]>
		
		<isNotEmpty property="attachfile1">
					, ATTACHFILE1		= '$attachfile1$'
					, ATTACHFILEORG1	= '$attachfileorg1$'
					, ATTACHTYPE1		= '$attachtype1$'
		</isNotEmpty>
		
		<![CDATA[		
			 		, UPDATE_DT			= SYSDATE
					, UPDATE_IP			= '$update_ip$'
					, UPDATE_ID			= '$update_id$'
					, CONTENTS 			= '$contents$'
             WHERE	MASTER_CD = $master_cd$
		]]>
	</update>
	
	<select id="pollDAO.selectQuestionList" parameterClass="Master" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 	QUESTION_CD				AS QUESTION_CD
					, QUESTION				AS QUESTION
					, QUEST_TYPE_CD			AS QUEST_TYPE_CD
					, MULTI_CHECK_YN		AS MULTI_CHECK_YN
					, OTHER_YN				AS OTHER_YN
			FROM 	HETB_CK_QUESTION 
			WHERE 	MASTER_CD = $master_cd$
					AND STATUS = 'N'
			ORDER BY ORDERBY ASC
		]]>
	</select>
	
	<select id="pollDAO.selectTestQuestionList" parameterClass="Master" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 	QUESTION_CD				AS QUESTION_CD
					, QUESTION				AS QUESTION
					, QUEST_TYPE_CD			AS QUEST_TYPE_CD
					, MULTI_CHECK_YN		AS MULTI_CHECK_YN
					, OTHER_YN				AS OTHER_YN
			FROM 	HETB_CK_QUESTION 
			WHERE 	MASTER_CD = $master_cd$
					AND STATUS = 'N'
					AND QUESTION_CD IN (2,3,4,5,6,7)
			ORDER BY ORDERBY ASC
		]]>
	</select>
	
	<select id="pollDAO.selectAnswerStatisticsList" parameterClass="Master" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT	A.QUESTION2_CD						AS QUESTION2_CD
					, A.QUESTION2						AS QUESTION2
					, NVL(B.TC, 0) 						AS TC
					, NVL(B.TOT, 0) 					AS TOT
					, NVL(B.PERCENT, 0) 				AS PERCENT
					, NVL(B.PERCENT, 0)*2 				AS BAR_WIDTH
					, A.MASTER_CD
					, B.QUESTION_CD
			FROM 	(
						SELECT	MASTER_CD
								, QUESTION1_CD
								, QUESTION2_CD
								, QUESTION2
						FROM	HETB_CK_QUESTION2 
						WHERE	MASTER_CD = $master_cd$ 
								AND QUESTION1_CD = $question_cd$ 
								AND STATUS = 'N'
						UNION ALL
						SELECT	MASTER_CD
								, QUESTION_CD
								, 9999 QUESTION2_CD
								, '기타' QUESTION2 
						FROM	HETB_CK_QUESTION
						WHERE	MASTER_CD = $master_cd$  
								AND QUESTION_CD = $question_cd$ 
								AND STATUS = 'N' 
								AND OTHER_YN = 'Y'
					) A , (
						SELECT	A.MASTER_CD
								, A.QUESTION_CD
								, A.QUESTION2_CD
								, A.TC
								, B.TOT
								, ROUND(A.TC*100/B.TOT) PERCENT
						FROM (
							SELECT	MASTER_CD
									, QUESTION_CD
									, QUESTION2_CD
									, COUNT(*) TC
							FROM	HETB_CK_ANSWER2
							WHERE	MASTER_CD = $master_cd$  
									AND QUESTION_CD = $question_cd$ 
									AND STATUS = 'N'
							GROUP BY MASTER_CD, QUESTION_CD, QUESTION2_CD
							) A , (
									SELECT	MASTER_CD
											, QUESTION_CD
											, COUNT(*) TOT 
									FROM	HETB_CK_ANSWER2
									WHERE	MASTER_CD = $master_cd$  
											AND QUESTION_CD = $question_cd$ 
											AND STATUS = 'N'
									GROUP BY MASTER_CD, QUESTION_CD
							) B
						WHERE	A.MASTER_CD = B.MASTER_CD 
								AND A.QUESTION_CD = B.QUESTION_CD
					) B
			WHERE	A.MASTER_CD = B.MASTER_CD(+) 
					AND A.QUESTION1_CD = B.QUESTION_CD(+)
					AND A.QUESTION2_CD = B.QUESTION2_CD(+)
			ORDER BY DECODE(QUESTION2_CD, 0, 999999999999999999, QUESTION2_CD) ASC
				
		]]>
	</select>
	
	<select id="pollDAO.selectTestAnswerStatisticsList" parameterClass="Master" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT	A.QUESTION2_CD						AS QUESTION2_CD
					, A.QUESTION2						AS QUESTION2
					, NVL(B.TC, 0) 						AS TC
					, NVL(B.TOT, 0) 					AS TOT
					, NVL(B.PERCENT, 0) 				AS PERCENT
					, NVL(B.PERCENT, 0)*2 				AS BAR_WIDTH
					, A.MASTER_CD
					, B.QUESTION_CD
			FROM 	(
						SELECT	MASTER_CD
								, QUESTION1_CD
								, QUESTION2_CD
								, QUESTION2
						FROM	HETB_CK_QUESTION2 
						WHERE	MASTER_CD = $master_cd$ 
								AND QUESTION1_CD = $question_cd$ 
								AND STATUS = 'N'
						UNION ALL
						SELECT	MASTER_CD
								, QUESTION_CD
								, 9999 QUESTION2_CD
								, '기타' QUESTION2 
						FROM	HETB_CK_QUESTION
						WHERE	MASTER_CD = $master_cd$  
								AND QUESTION_CD = $question_cd$ 
								AND STATUS = 'N' 
								AND OTHER_YN = 'Y'
					) A , (
						SELECT	A.MASTER_CD
								, A.QUESTION_CD
								, A.QUESTION2_CD
								, A.TC
								, B.TOT
								, ROUND(A.TC*100/B.TOT) PERCENT
						FROM (
							SELECT	MASTER_CD
									, QUESTION_CD
									, QUESTION2_CD
									, COUNT(*) TC
							FROM	HETB_CK_ANSWER2
							WHERE	MASTER_CD = $master_cd$  
									AND QUESTION_CD = $question_cd$ 
									AND STATUS = 'N'
									AND COMPANY_ID IN (
										SELECT DISTINCT COMPANY_ID
										FROM HETB_CK_ANSWER2
										WHERE QUESTION_CD IN ( 
							              64,
							              65,
							              66,
							              67,
							              68,
							              69,
							              70,
							              71,
							              72,
							              73,
							              74,
							              75,
							              76
							            )
										AND MASTER_CD = 1
									)
							GROUP BY MASTER_CD, QUESTION_CD, QUESTION2_CD
							) A , (
									SELECT	MASTER_CD
											, QUESTION_CD
											, COUNT(*) TOT 
									FROM	HETB_CK_ANSWER2
									WHERE	MASTER_CD = $master_cd$  
											AND QUESTION_CD = $question_cd$ 
											AND STATUS = 'N'
											AND COMPANY_ID IN (
												SELECT DISTINCT COMPANY_ID
												FROM HETB_CK_ANSWER2
												WHERE QUESTION_CD IN ( 
									              64,
									              65,
									              66,
									              67,
									              68,
									              69,
									              70,
									              71,
									              72,
									              73,
									              74,
									              75,
									              76
									            )
									       )
									GROUP BY MASTER_CD, QUESTION_CD
							) B
						WHERE	A.MASTER_CD = B.MASTER_CD 
								AND A.QUESTION_CD = B.QUESTION_CD
					) B
			WHERE	A.MASTER_CD = B.MASTER_CD(+) 
					AND A.QUESTION1_CD = B.QUESTION_CD(+)
					AND A.QUESTION2_CD = B.QUESTION2_CD(+)
			ORDER BY DECODE(QUESTION2_CD, 0, 999999999999999999, QUESTION2_CD) ASC
				
		]]>
	</select>
	
	<insert id="pollDAO.insertQuestion" parameterClass="Question">
		<![CDATA[
			INSERT INTO	
				HETB_CK_QUESTION	
					(QUESTION_CD
					, MASTER_CD
					, QUESTION
					, QUEST_TYPE_CD
					, MULTI_CHECK_YN
					, OTHER_YN
					, ORDERBY
					, INSERT_ID
					, UPDATE_ID
					, INSERT_DT
					, UPDATE_DT)
				VALUES	
					((SELECT NVL(MAX(QUESTION_CD),0)+1 FROM HETB_CK_QUESTION)
					, $master_cd$
					, '$question$'
					, '$quest_type_cd$'
					, '$multi_check_yn$'
					, '$other_yn$'
					, (SELECT NVL(MAX(ORDERBY), 0)+1 FROM HETB_CK_QUESTION WHERE MASTER_CD = $master_cd$)
					, '$insert_id$'
					, '$update_id$'
					, SYSDATE
					, SYSDATE)
		]]>
	</insert>
	
	<select id="pollDAO.selectQuestion" parameterClass="Question" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT	QUESTION_CD
					, MASTER_CD
					, QUESTION
					, QUEST_TYPE_CD
					, MULTI_CHECK_YN
					, OTHER_YN  
					, UPDATE_DT
					, UPDATE_ID 
			FROM	HETB_CK_QUESTION  
			WHERE	QUESTION_CD = $question_cd$
					AND MASTER_CD = $master_cd$ 
					AND STATUS = 'N' 
		]]>
	</select>
	
	<select id="pollDAO.selectQuestionA" parameterClass="Company" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT	A.QUESTION_CD
					, A.QUESTION
					, A.QUEST_TYPE_CD
					, A.MULTI_CHECK_YN
					, A.OTHER_YN
					, B.QUESTION2_CD
					, B.OTHER
			FROM	HETB_CK_QUESTION A
					LEFT OUTER JOIN 
						(SELECT	MASTER_CD
									, COMPANY_CD
									, QUESTION_CD
									, LTRIM(MAX(SYS_CONNECT_BY_PATH(QUESTION2_CD,',')),',') QUESTION2_CD
									, REPLACE(LTRIM(MAX(SYS_CONNECT_BY_PATH(OTHER,'º')),'º'), 'º', '') OTHER
						FROM		( SELECT	MASTER_CD
												, COMPANY_CD
												, QUESTION_CD
												, (':'||QUESTION2_CD||':') QUESTION2_CD
												, REPLACE(OTHER, 'º', '') OTHER
												, ROW_NUMBER() OVER ( PARTITION BY MASTER_CD
																	, COMPANY_CD
																	, QUESTION_CD ORDER BY QUESTION_CD
																	, QUESTION2_CD) SPAN
									FROM	HETB_CK_ANSWER2
									WHERE	MASTER_CD = $master_cd$
											AND COMPANY_ID = #company_id#
											AND STATUS = 'N')
									START WITH SPAN = 1
									CONNECT BY PRIOR MASTER_CD = MASTER_CD
												AND PRIOR COMPANY_CD = COMPANY_CD
												AND PRIOR QUESTION_CD = QUESTION_CD
												AND PRIOR SPAN = SPAN -1 
									GROUP BY MASTER_CD, COMPANY_CD, QUESTION_CD)
						B ON A.MASTER_CD = B.MASTER_CD AND A.QUESTION_CD = B.QUESTION_CD 
			WHERE	A.MASTER_CD = #master_cd# AND A.STATUS = 'N'
					/* 
					AND A.MASTER_CD = B.MASTER_CD
					AND A.QUESTION_CD = B.QUESTION_CD
					*/
			ORDER BY A.QUESTION_CD ASC
		]]>
	</select>
	
	<update id="pollDAO.updateQuestion" parameterClass="Question">
		<![CDATA[
			UPDATE	HETB_CK_QUESTION	
			SET		QUESTION 			= '$question$'
					, QUEST_TYPE_CD		= '$quest_type_cd$'
					, MULTI_CHECK_YN 	= '$multi_check_yn$'
					, OTHER_YN 			= '$other_yn$'
					, UPDATE_ID 		= '$update_id$'
					, UPDATE_DT 		= SYSDATE
			WHERE	QUESTION_CD = $question_cd$
					AND MASTER_CD = $master_cd$
		]]>
	</update>
	
	<select id="pollDAO.selectQuestion2ForUpdate" parameterClass="Question2" resultClass="Question2">
		<![CDATA[	
			SELECT	QUESTION2_CD
					, QUESTION2 
					, ORDERBY 
					, UPDATE_DT
					, STATUS 
			FROM	HETB_CK_QUESTION2 
			WHERE	QUESTION1_CD = $question1_cd$
					AND MASTER_CD = $master_cd$ 
					AND STATUS = 'N'
			ORDER BY ORDERBY ASC	
		]]>
	</select>
	
	<insert id="pollDAO.insertQuestion2" parameterClass="Question2">
		<![CDATA[
			/* 질문 항목 등록 */
			INSERT INTO 
				HETB_CK_QUESTION2
					(QUESTION2_CD
					, MASTER_CD
					, QUESTION1_CD
					, QUESTION2
					, ORDERBY) 
				VALUES
					((SELECT NVL(MAX(QUESTION2_CD), 0)+1 FROM HETB_CK_QUESTION2)
					,  $master_cd$
					,  $question1_cd$
					, '$question2$'
					,  $orderby$)
		]]>
	</insert>
	
	<update id="pollDAO.updateQuestion2" parameterClass="Question2">
		<![CDATA[
			/* 질문 항목 수정 */
			UPDATE	HETB_CK_QUESTION2 
		]]>
		<isEqual property="status" compareValue="N">
			SET		QUESTION2 = '$question2$'
					, UPDATE_DT = SYSDATE
		</isEqual>
		<isEqual property="status" compareValue="Y">
			SET		STATUS = 'Y'
					, UPDATE_DT = SYSDATE
		</isEqual>
		<![CDATA[
			WHERE	QUESTION2_CD = $question2_cd$ 
					AND QUESTION1_CD = $question1_cd$ 
					AND MASTER_CD = $master_cd$
		]]>
	</update>
	
    <select id="pollDAO.selectMaster" parameterClass="Company" resultMap="Master">
    	<![CDATA[
    		SELECT	MASTER_CD
					, TYPE_CD
					, TITLE
					, START_DT 
					, END_DT 
					, ATTACHFILE1
					, ATTACHFILEORG1
					, ATTACHTYPE1
					, INSERT_DT
					, INSERT_IP
					, INSERT_ID
					, UPDATE_DT
					, UPDATE_IP
					, UPDATE_ID
					, CONTENTS
					, (	SELECT	COUNT(*) 
						FROM	HETB_CK_QUESTION 
						WHERE	MASTER_CD = $master_cd$
								AND STATUS = 'N') QUESTION_CNT
					, CASE
						WHEN (TO_DATE(START_DT, 'YY-MM-DD') >= TO_DATE(SYSDATE, 'YY-MM-DD')) THEN 'Y'
						ELSE 'N'
					  END GIGAN_OPEN_YN 
    				, YEAR_CD
			FROM	HETB_CK_MASTER  
			WHERE	MASTER_CD = $master_cd$
					AND STATUS = 'N'	
    	]]>
    </select>
    
    <select id="pollDAO.selectOngoingMasterList" parameterClass="string" resultClass="java.util.HashMap">
    	<![CDATA[
    		SELECT	MASTER_CD
					, TYPE_CD
					, TITLE
					, START_DT 
					, END_DT 
					, ATTACHFILE1
					, ATTACHFILEORG1
					, ATTACHTYPE1
					, INSERT_DT
					, INSERT_IP
					, INSERT_ID
					, UPDATE_DT
					, UPDATE_IP
					, UPDATE_ID
					, CONTENTS
					, (	SELECT	COUNT(*) 
						FROM	HETB_CK_QUESTION 
						WHERE	MASTER_CD = A.MASTER_CD
								AND STATUS = 'N') QUESTION_CNT
    				, YEAR_CD
			FROM	HETB_CK_MASTER  A
			WHERE   TO_CHAR(START_DT, 'YYYYMMDD') <= TO_CHAR(SYSDATE, 'YYYYMMDD')
			AND     TO_CHAR(END_DT, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD')
			AND 	STATUS = 'N'	
			AND 	YEAR_CD = '000000'
			ORDER BY INSERT_DT DESC
    	]]>
    </select>
    
    <select id="pollDAO.selectFinishedMasterList" parameterClass="zvl" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT * FROM ( SELECT rownum rn, TB.* FROM (
    		SELECT	MASTER_CD
					, TYPE_CD
					, TITLE
					, START_DT 
					, END_DT 
					, ATTACHFILE1
					, ATTACHFILEORG1
					, ATTACHTYPE1
					, INSERT_DT
					, INSERT_IP
					, INSERT_ID
					, UPDATE_DT
					, UPDATE_IP
					, UPDATE_ID
					, CONTENTS
					, (	SELECT	COUNT(*) 
						FROM	HETB_CK_QUESTION 
						WHERE	MASTER_CD = A.MASTER_CD
								AND STATUS = 'N') QUESTION_CNT
    				, YEAR_CD
			FROM	HETB_CK_MASTER  A
			WHERE  ( TO_CHAR(START_DT, 'YYYYMMDD') > TO_CHAR(SYSDATE, 'YYYYMMDD')
			OR     TO_CHAR(END_DT, 'YYYYMMDD') < TO_CHAR(SYSDATE, 'YYYYMMDD') )
			AND 	STATUS = 'N'	
			AND 	YEAR_CD = '000000'
			ORDER BY 
				INSERT_DT DESC
		       ) TB )  WHERE rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
    	]]>
    </select>
    
    <select id="pollDAO.selectFinishedMasterListCnt" parameterClass="string" resultClass="int">
    	<![CDATA[
    		SELECT	COUNT(*)
			FROM	HETB_CK_MASTER
			WHERE   ( TO_CHAR(START_DT, 'YYYYMMDD') > TO_CHAR(SYSDATE, 'YYYYMMDD')
			OR     TO_CHAR(END_DT, 'YYYYMMDD') < TO_CHAR(SYSDATE, 'YYYYMMDD') )
			AND 	STATUS = 'N'	
			AND 	YEAR_CD = '000000'
    	]]>
    </select>
    
    <select id="pollDAO.selectQuestionU" parameterClass="Company" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT	A.QUESTION_CD
					, A.QUESTION
					, A.QUEST_TYPE_CD
					, A.MULTI_CHECK_YN
					, A.OTHER_YN
                    , CASE WHEN A.OTHER_YN = 'Y' THEN 
                    	(SELECT NVL(COUNT(*),0) AS OTHER_CNT 
                		 FROM HETB_CK_ANSWER2
                		 WHERE QUESTION2_CD = '9999' AND QUESTION_CD = A.QUESTION_CD AND MASTER_CD=A.MASTER_CD  
                        )
                           ELSE 0
                      END AS OTHER_CNT
			FROM	HETB_CK_QUESTION A
			WHERE	A.MASTER_CD = $master_cd$ AND A.STATUS = 'N'
			ORDER BY A.QUESTION_CD ASC
    	]]>
    </select>
    
    <select id="pollDAO.selectAnswer" parameterClass="Question2" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT	QUESTION2_CD
					, QUESTION2 
			FROM	HETB_CK_QUESTION2
			WHERE	QUESTION1_CD = $question_cd$ 
					AND MASTER_CD = $master_cd$ 
					AND STATUS = 'N' 
			ORDER BY ORDERBY ASC
    	]]>
    </select>
    
    <select id="pollDAO.selectAnswerAndResponse" parameterClass="Question2" resultClass="java.util.HashMap">
    	<![CDATA[
			SELECT	A.QUESTION2_CD
					, A.QUESTION2 
					, NVL(B.ANSWER_CNT,0) AS ANSWER_CNT
			FROM	HETB_CK_QUESTION2 A
			LEFT OUTER JOIN 
			( 
				SELECT MASTER_CD, QUESTION_CD, QUESTION2_CD, NVL(COUNT(*),0) AS ANSWER_CNT 
                FROM HETB_CK_ANSWER2     
                GROUP BY MASTER_CD, QUESTION_CD, QUESTION2_CD
			) B
			ON B.MASTER_CD = A.MASTER_CD AND B.QUESTION_CD = A.QUESTION1_CD 
            AND B.QUESTION2_CD = A.QUESTION2_CD
			WHERE	A.QUESTION1_CD = $question_cd$ 
					AND A.MASTER_CD = $master_cd$ 
					AND A.STATUS = 'N' 
			ORDER BY A.ORDERBY ASC
    	]]>
    </select>
    
    <insert id="pollDAO.checkQuestion" parameterClass="Answer">
    	<![CDATA[ 
    		INSERT 
				INTO	HETB_CK_ANSWER 
					(	answer_cd
						, company_cd
						, company_id
						, master_cd
						, sangho_name
						, number1
						, number2
						, number3
						, name1
						, jumin1
						, name2
						, jumin2
						, name3
						, jumin3
						, addr1
						, addr2
						, email
						, tel
						, hp
						, fax
						, homepage
						, room_cnt
						, work_time1
						, work_time2
						, work_time3
						, cnt1
						, cnt2
						, cnt3
						, cnt4
						, cnt5
						, cnt6
						, cnt7
						, cnt8
						, cnt9
						, article1_yn
						, article2_yn
						, article3_yn
						, article4_yn
						, article5_yn
						, article6_yn
						, article7_yn
						, article8_yn
						, article9_yn
						, other1
						, other2
						, other3
						, other4
						, other5
						, other6
						, other7
						, other8
						, attachfile1
						, attachfileorg1
						, attachtype1
						, status
						, insert_dt
						, insert_ip
						, insert_id
						, update_dt
						, update_ip
						, update_id )
				VALUES ( (SELECT NVL(MAX(answer_cd), 0)+1 FROM HETB_CK_ANSWER)
						, $company_cd$
						, '$company_id$'
						, $master_cd$
						, '$sangho_name$'
						, '$number1$'
						, '$number2$'
						, '$number3$'
						, '$name1$'
						, '$jumin1$'
						, '$name2$'
						, '$jumin2$'
						, '$name3$'
						, '$jumin3$'
						, '$addr1$'
						, '$addr2$'
						, '$email$'
						, '$tel$'
						, '$hp$'
						, '$fax$'
						, '$homepage$'
						, $room_cnt$
						, '$work_time1$'
						, '$work_time2$'
						, '$work_time3$'
						, $cnt1$
						, $cnt2$
						, $cnt3$
						, $cnt4$
						, $cnt5$
						, $cnt6$
						, $cnt7$
						, $cnt8$
						, $cnt9$
						, '$article1_yn$'
						, '$article2_yn$'
						, '$article3_yn$'
						, '$article4_yn$'
						, '$article5_yn$'
						, '$article6_yn$'
						, '$article7_yn$'
						, '$article8_yn$'
						, '$article9_yn$'
						, '$other1$'
						, '$other2$'
						, '$other3$'
						, '$other4$'
						, '$other5$'
						, '$other6$'
						, '$other7$'
						, '$other8$'
						, '$attachfile1$'
						, '$attachfileorg1$'
						, '$attachtype1$'
						, '$status$'
						, SYSDATE
						, '$insert_ip$'
						, '$insert_id$'
						, SYSDATE
						, '$update_ip$'
						, '$update_id$' )
    	]]>
    
    </insert>
    
    <insert id="pollDAO.checkQuestion2" parameterClass="Answer">
    	<![CDATA[ 
    		INSERT INTO 
			HETB_CK_ANSWER2 (
				ANSWER2_CD
				, COMPANY_CD
				, COMPANY_ID
				, MASTER_CD
				, QUESTION_CD
				, QUESTION2_CD
				, OTHER)
			VALUES( 
				(SELECT NVL(MAX(ANSWER2_CD), 0)+1 FROM HETB_CK_ANSWER2)
				, $company_cd$
				, '$company_id$'
				, $master_cd$
				, $question_cd$
				, $question2_cd$
				, '$other$')
    	]]>
    
    </insert>
    
    <select id="pollDAO.selectOtherList" parameterClass="zvl" resultClass="zvl">
    	<![CDATA[
			SELECT OTHER
			FROM HETB_CK_ANSWER2
			WHERE MASTER_CD = #masterCd#
			AND QUESTION_CD = #questionCd#
			AND QUESTION2_CD = 9999
			AND OTHER IS NOT NULL
    	]]>
    </select>
    
    <select id="pollDAO.selectEssayList" parameterClass="zvl" resultClass="zvl">
    	<![CDATA[
			SELECT OTHER
			FROM HETB_CK_ANSWER2
			WHERE MASTER_CD = #masterCd#
			AND QUESTION_CD = #questionCd#
			AND QUESTION2_CD = 0
			AND OTHER IS NOT NULL
    	]]>
    </select>
    
	<update id="pollDAO.updateQuestionForDelete" parameterClass="Question">
		<![CDATA[
			UPDATE	HETB_CK_QUESTION 
			SET		STATUS = 'Y'
					, UPDATE_DT = SYSDATE
					, UPDATE_ID = '$update_id$'
			WHERE	QUESTION_CD = $question_cd$
					AND MASTER_CD = $master_cd$ 
		]]>
	</update>
	
    <select id="pollDAO.selectTempPollId" resultClass="int">
    	<![CDATA[
			SELECT SEQ_TEMP_POLL_ID.NEXTVAL
			FROM DUAL
    	]]>
    </select>
    
	<select id="pollDAO.selectCheckedListTotCnt" parameterClass="Master" resultClass="int">
		<![CDATA[
			SELECT	NVL(ANSWER_CNT,0) AS ANSWER_CNT
			FROM	(
					  SELECT COUNT(*) AS ANSWER_CNT
					  FROM(							  
						SELECT DISTINCT COMPANY_ID
             			FROM	HETB_CK_ANSWER2 
						WHERE STATUS = 'N' AND MASTER_CD = #master_cd#
					  )
					) A 
		]]>
	</select>
	
	
	<select id="pollDAO.selectCheckedList" parameterClass="Master" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT	* 
			FROM	( 
					SELECT	ROWNUM RNUM, A.* 
					FROM	(
								SELECT DISTINCT COMPANY_ID
               					FROM	HETB_CK_ANSWER2 
								WHERE STATUS = 'N' AND MASTER_CD = #master_cd#
							) A 
					
					)
			WHERE	RNUM > #firstIndex#
					AND RNUM <= #firstIndex# + #recordCountPerPage#
		]]>
	</select>
	
	<delete id="pollDAO.deleteAnswer2ForCompanyId" parameterClass="Company">
		<![CDATA[
			DELETE 	FROM HETB_CK_ANSWER2
			WHERE 	COMPANY_ID = '$id$'
			AND MASTER_CD = $master_cd$
		]]>
	</delete>
	
	<delete id="pollDAO.deleteAnswer2A" parameterClass="int">
		<![CDATA[
			DELETE 	FROM HETB_CK_ANSWER2
			WHERE 	MASTER_CD = #masterCd#
		]]>
	</delete>
	
	<delete id="pollDAO.deleteQuestion2A" parameterClass="int">
		<![CDATA[
			DELETE 	FROM HETB_CK_QUESTION2
			WHERE 	MASTER_CD = #masterCd#
		]]>
	</delete>
	
	<delete id="pollDAO.deleteQuestionA" parameterClass="int">
		<![CDATA[
			DELETE 	FROM HETB_CK_QUESTION
			WHERE 	MASTER_CD = #masterCd#
		]]>
	</delete>
	
	<delete id="pollDAO.deleteMasterA" parameterClass="int">
		<![CDATA[
			DELETE 	FROM HETB_CK_MASTER
			WHERE 	MASTER_CD = #masterCd#
		]]>
	</delete>
	
	<select id="pollDAO.selectRescentPoll" resultClass="zvl">
		<![CDATA[
			SELECT A.*
			FROM
			(
				SELECT	MASTER_CD, TITLE
				FROM	HETB_CK_MASTER
				WHERE   TO_CHAR(START_DT, 'YYYYMMDD') <= TO_CHAR(SYSDATE, 'YYYYMMDD')
				AND     TO_CHAR(END_DT, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD')
				AND 	STATUS = 'N'	
				AND 	YEAR_CD = '000000'
				ORDER BY INSERT_DT DESC
			) A
			WHERE ROWNUM = 1
			
		]]>
	</select>	
	
	<select id="pollDAO.selectPollExceptSatisfaction" resultClass="zvl">
		<![CDATA[
			SELECT AA.COMPANY_ID, BB.QUESTION, BB.QUESTION2
			FROM HETB_CK_ANSWER2 AA
			INNER JOIN
			(
			  SELECT A.QUESTION, B.QUESTION2, A.QUESTION_CD, B.QUESTION2_CD, A.MASTER_CD
			  FROM HETB_CK_QUESTION A
			  INNER JOIN HETB_CK_QUESTION2 B
			  ON B.QUESTION1_CD = A.QUESTION_CD
			  WHERE A.QUESTION_CD IN (1,2,3,4,5,6,7)
			  AND A.MASTER_CD = B.MASTER_CD
			  AND A.MASTER_CD = 1
			) BB ON BB.QUESTION_CD = AA.QUESTION_CD
			AND BB.QUESTION2_CD = AA.QUESTION2_CD
			AND BB.MASTER_CD = AA.MASTER_CD
			WHERE AA.COMPANY_ID NOT IN
			(
			  SELECT DISTINCT COMPANY_ID FROM HETB_CK_ANSWER2
			  WHERE QUESTION_CD = 66
			  AND MASTER_CD = 1
			)
		]]>
	</select>	
</sqlMap>                            